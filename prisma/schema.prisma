// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ShiftStatus {
  SCHEDULED
  COMPLETED
  CANCELED
}

enum GenderStatus {
  Male
  Female
}

enum RoleStatus {
  Carer
  Admin
  Coordinator
  HR
  OfficeSupport
  Ops
  Kiosk
  Others
}

enum EmploymentTypeStatus {
  FullTime
  PartTime
  Casual
  Contractor
  Others
}

model Staff {
  id                String          @id @default(uuid())
  personalDetailsId String
  personalDetails   PersonalDetails @relation(fields: [personalDetailsId], references: [id])
  workDetailsId     String
  workDetails       WorkDetails     @relation(fields: [workDetailsId], references: [id])
  archived          Boolean
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

model PersonalDetails {
  id               String        @id @default(uuid())
  fullName         String
  email            String        @unique
  phoneNumber      String        @unique
  address          String
  dob              DateTime
  emergencyContact String
  language         String?
  nationality      String?
  gender           GenderStatus?
  Staff            Staff[]
}

model WorkDetails {
  id             String               @id @default(uuid())
  worksAt        String
  hiredOn        DateTime
  role           RoleStatus
  employmentType EmploymentTypeStatus
  teams          Team[]               @relation("WorkDetailsTeams")
  Staff          Staff[]
}

model Team {
  id          String        @id @default(uuid())
  name        String
  workDetails WorkDetails[] @relation("WorkDetailsTeams")
  createdAt   DateTime      @default(now())
}

// remaining from below
model Compliance {
  id            String   @id @default(uuid())
  staffId       String   @unique
  certification String
  expiryDate    DateTime
  status        String
}

model Settings {
  id                   String  @id @default(uuid())
  staffId              String  @unique
  notificationsEnabled Boolean @default(true)
  theme                String  @default("light")
}

model NextOfKin {
  id       String @id @default(uuid())
  staffId  String @unique
  name     String
  relation String
  contact  String
}

model PayrollSettings {
  id            String @id @default(uuid())
  staffId       String @unique
  bankName      String
  accountNumber String
  taxCode       String
}
