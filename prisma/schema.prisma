// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum ShiftStatus {
    SCHEDULED
    COMPLETED
    CANCELED
}

enum GenderStatus {
    Male
    Female
}

enum RoleStatus {
    Carer
    Admin
    Coordinator
    HR
    OfficeSupport
    Ops
    Kiosk
    Others
}

enum EmploymentTypeStatus {
    FullTime
    PartTime
    Casual
    Contractor
    Others
}

model Compliance {
    id            String   @id @default(uuid())
    staffId       String   @unique
    certification String
    expiryDate    DateTime
    status        String
}

model NextOfKin {
    id       String @id @default(uuid())
    staffId  String @unique
    name     String
    relation String
    contact  String
    email    String @unique
}

model PayrollSettings {
    id            String @id @default(uuid())
    staffId       String @unique
    bankName      String
    accountNumber String
    taxCode       String
}

model Settings {
    id                   String  @id @default(uuid())
    staffId              String  @unique
    notificationsEnabled Boolean @default(true)
    theme                String  @default("light")
}

model Staff {
    id                String          @id @default(uuid())
    personalDetailsId String
    personalDetails   PersonalDetails @relation(fields: [personalDetailsId], references: [id])
    workDetailsId     String
    workDetails       WorkDetails     @relation(fields: [workDetailsId], references: [id])
    archived          Boolean         @default(false)
    createdAt         DateTime        @default(now())
    updatedAt         DateTime        @updatedAt
}

model Team {
    id          String        @id @default(uuid())
    name        String        @unique
    workDetails WorkDetails[] @relation("TeamWorkDetails")
    createdAt   DateTime      @default(now())
}

model WorkDetails {
    id             String               @id @default(uuid())
    worksAt        String
    hiredOn        DateTime
    role           RoleStatus
    employmentType EmploymentTypeStatus
    teamId         String? // Optional team reference
    team           Team?                @relation("TeamWorkDetails", fields: [teamId], references: [id])
    Staff          Staff[]

    @@index([teamId])
}

model PersonalDetails {
    id               String        @id @default(uuid())
    fullName         String
    email            String        @unique
    phoneNumber      String        @unique
    address          String
    dob              DateTime
    emergencyContact String
    language         String?
    nationality      String?
    gender           GenderStatus?
    Staff            Staff[]
}
